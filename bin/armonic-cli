#!/usr/bin/python
"""This is a client implementation module.

Actions needed to control agent:
- load a module
- get information about this module

"""

import sys
import argparse
import logging
from armonic.client.xmpp import XMPPAgentApi, XMPPClientBase, XMPPError
import armonic.frontends.cli
from threading import Event

logger = logging.getLogger()

parser = argparse.ArgumentParser(
    prog='armonic-cli',
    description=("A simple client to contact a Armonic agent. "
                 "It is mainly used to get informations "
                 "but can also do some simple actions."))
parser.add_argument("-J", "--jid-agent", required=True,
                    help="Agent JID <username@fqdn>")

cli_base = armonic.frontends.utils.CliBase(parser)
cli_xmpp = armonic.frontends.utils.CliXMPP(parser)
cli = armonic.frontends.cli.Cli(parser)

args = cli_base.parse_args()
args = cli_xmpp.parse_args()

xmpp_client_ready = Event()
xmpp_client = XMPPClientBase(args.jid, cli_xmpp.password)
agent = XMPPAgentApi(xmpp_client, args.jid_agent + "/agent")

def run_cli():
    try:
        cli.func(agent)
    except XMPPError:
        pass
    xmpp_client.disconnect()
    sys.exit(0)

xmpp_client.add_event_handler('session_start', lambda e: xmpp_client_ready.set())
if args.host:
    xmpp_client.connect(address=(args.host, args.port))
else:
    xmpp_client.connect()
xmpp_client.process(block=False)
xmpp_client_ready.wait()
run_cli()
