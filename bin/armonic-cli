#!/usr/bin/python
"""This is a client implementation module.

Actions needed to control agent:
- load a module
- get information about this module


"""

import argparse
import os

import logging
from armonic.client.sock import ClientSocket


import armonic.frontends.cli

parser = argparse.ArgumentParser(
    prog='armonic-client',
    description=("A simple client to contact a Armonic agent. "
                 "It is mainly used to get informations "
                 "but can also do some simple actions."))
parser.add_argument("-J","--jid-agent-host", dest="jid_agent_host", help="jid agent xmpp <user>@<host>/<resource>")
parser.add_argument('--jid', '-j',
                        type=str,
                        dest="jid_armonic_cli",
                        help="Jid client xmpp <user>@<host>[:port]/<resource>")
parser.add_argument('--password',
                        type=str,
                        help="Password client xmpp armonic-cli")
parser.add_argument('--host-xmpp',
                    dest="host_xmpp",
                    type=str,
                    help='jabberd host different from host uri jid')
parser.add_argument('--port','-P', type=int, default=8000,help='Armonic agent port (default: %(default)s)')
parser.add_argument('--host','-H', type=str, default=os.environ.get('ARMONIC_AGENT_HOST', "localhost")
                    ,help="Armonic agent host (default: '%(default)s'). Agent host can also be specified with env variable 'ARMONIC_AGENT_HOST'")

cli_base = armonic.client.utils.CliBase(parser)
cli = armonic.frontends.cli.Cli(parser)


args = cli_base.parse_args()


format = '%(asctime)s|%(levelname)6s - %(ip)s/%(xpath)s - %(message)s'
sh = logging.StreamHandler()
sh.setLevel(cli_base.logging_level)
sh.setFormatter(logging.Formatter(format))
client = ClientSocket(args.host, args.port)
client.add_logging_handler(sh)


cli.func(client)