#!/usr/bin/python
"""This is a client implementation module.

Actions needed to control agent:
- load a module
- get information about this module

"""

import argparse
import re
import sys
import logging
from armonic.client.xmpp import Xmpp, XmppError
import armonic.frontends.cli

logger = logging.getLogger()

parser = argparse.ArgumentParser(
    prog='armonic-cli',
    description=("A simple client to contact a Armonic agent. "
                 "It is mainly used to get informations "
                 "but can also do some simple actions."))
parser.add_argument("-J", "--jid-agent", required=True,
                    help="Agent JID <username@fqdn>")

cli_base = armonic.frontends.utils.CliBase(parser)
cli_xmpp = armonic.frontends.utils.CliXMPP(parser)
cli = armonic.frontends.cli.Cli(parser)

args = cli_base.parse_args()
args = cli_xmpp.parse_args()

format = '%(asctime)s|%(levelname)6s - %(ip)s/%(xpath)s - %(message)s'
sh = logging.StreamHandler()
sh.setLevel(cli_base.logging_level)
sh.setFormatter(logging.Formatter(format))

client = Xmpp(args.jid, cli_xmpp.password, args.jid_agent, args.host, args.port)

try:
    cli.func(client)
except XmppError:
    pass

client.close()
