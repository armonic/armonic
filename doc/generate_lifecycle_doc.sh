#!/bin/bash
# From HERE, it finds all modules and creates dot and svg lifecycle representation.
# Generated file are stored in doc/source/_images directory.
# Moreover, it generates a modules rst file which is included by index.rst

# The name of the module lifecycle class must be the same than the
# module directory name with the first letter in upper case. For instance:
# mss/modules/apache with mss.modules.apache.Apache classe.


image_path="source/_images"
mkdir ${image_path}

rst_module_file="source/modules.rst"
echo ".. Generated by generate_module_doc" > ${rst_module_file}
echo ".. Don't edit it!" >> ${rst_module_file}
echo "" >> ${rst_module_file}
modules=$(find ../mss/modules/*  -maxdepth 1 -type d)

for path in $modules
do 
    module=$(basename ${path})
    lifecycle=$(echo $module | sed '1s/^\s*./\U&\E/g')
    


    dot=$(python -c "import mss.modules.${module}  ; print mss.modules.${module}.lifecycle.${lifecycle}().toDot()" 2>/dev/null)
    if [ $? -eq 0 ]
    then
	echo $dot > ${image_path}/${module}.dot
	echo "dot file for ${module} has been created"
	dot -Tsvg ${path}/${module}.dot > ${image_path}/${module}.svg
	echo "svg file for ${module} has been created"

	echo "Module ${lifecycle}
==================================================

.. automodule:: mss.modules.${module}
    :members: 

.. figure:: _images/${module}.svg
   :width: 100%
" >> ${rst_module_file}


    else
	echo "dot file for ${module} cannot be genereted"
    fi
done


